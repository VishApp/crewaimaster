name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install UV
      uses: astral-sh/setup-uv@v3

    - name: Install dependencies
      run: |
        uv sync --extra dev

    - name: Run linting with ruff
      run: |
        uv run ruff check crewaimaster/

    - name: Run formatting check with ruff
      run: |
        uv run ruff format --check crewaimaster/

    - name: Run type checking with mypy
      run: |
        uv run mypy crewaimaster/

    - name: Run tests with pytest
      run: |
        uv run pytest tests/ --cov=crewaimaster --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install UV
      uses: astral-sh/setup-uv@v3

    - name: Install dependencies
      run: |
        uv sync --extra dev

    - name: Run security check with bandit
      run: |
        uv run bandit -r crewaimaster/ -f json -o bandit-report.json
      continue-on-error: true

    - name: Upload security report
      uses: actions/upload-artifact@v3
      with:
        name: security-report
        path: bandit-report.json

  build:
    runs-on: ubuntu-latest
    needs: [test, security]
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install UV
      uses: astral-sh/setup-uv@v3

    - name: Build package
      run: |
        uv build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/

  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install pre-commit
      run: |
        pip install pre-commit

    - name: Run pre-commit
      run: |
        pre-commit run --all-files